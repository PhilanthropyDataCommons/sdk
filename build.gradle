repositories {
    mavenCentral()
}

configurations {
    toCopy
}

dependencies {
    toCopy 'io.swagger.codegen.v3:swagger-codegen-cli:3.0.47'
}

task downloadSwaggerCodegen(type: Copy) {
    from configurations.toCopy
    into 'lib'
    rename {
        String fileName -> "swagger-codegen-cli.jar"
    }
}

task createLanguageModule() {
    dependsOn downloadSwaggerCodegen
    description = 'Generate a Swagger Codegen Module for a new language'

    doFirst {
        if (!project.hasProperty('language')) {
            throw new GradleException("The 'language' property is required. Please use -Planguage=<yourLanguage>.")
        }
    }
    doLast {
        def language = project.language
        exec {
            commandLine 'java', '-jar', 'lib/swagger-codegen-cli.jar', 'meta',
                '-o', "templates/${language}",
                '-n', "${language}",
                '-p', "org.philanthropydatacommons"
        }
    }
}

def invokeLanguageModulePackager = { String language ->
    println "Compiling module for language: $language"
    exec {
        workingDir = file("${project.projectDir}/templates/${language}")
        commandLine 'mvn', 'package'
    }
}

task packageLanguageModule() {
    doFirst {
        if (!project.hasProperty('language')) {
            throw new GradleException("The 'language' property is required. Please use -Planguage=<yourLanguage>.")
        }
    }
    doLast {
        def language = project.language
        invokeLanguageModulePackager(language)
    }
}

task packageLanguageModules() {
    doLast {
        file("${project.projectDir}/templates").eachDir { languageFolder ->
            def language = languageFolder.name
            invokeLanguageModulePackager(language)
        }
    }
}
